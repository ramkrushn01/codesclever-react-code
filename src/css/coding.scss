// Ignore all of this, scroll down until you see the next comment.
// I just like my eye candy.
// @import url("https://fonts.googleapis.com/css?family=Montserrat:100");


h1 {
	padding: 0;
	margin: 0;
	font-family: "Montserrat", sans-serif;
}



#wrapper
 {
	text-align: center;
}

.sub {
	color: rgb(100, 220, 220);
	letter-spacing: 1em;
}

// Here's the meat and potatoes.

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
@mixin glitchCopy {
	content: attr(data-text);
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

.glitch {
	position: relative;
	color: #1ed760;
	font-size: 2em;
	text-align: center;
	letter-spacing: 0.5em;
	/* Animation provies a slight random skew. Check bottom of doc
	for more information on how to random skew. */
	animation: glitch-skew 1s infinite linear alternate-reverse;

	// Creates a copy before our text.
	&::before {
		// Duplicates our text with the mixin.
		@include glitchCopy;
		// Scoots text slightly to the left for the color offset.
		left: 2px;
		// Creates the color 'shadow' that happens on the glitch.
		text-shadow: -2px 0 #ff00c1;
		/* Creates an initial clip for our glitch. This works in
		a typical top,right,bottom,left fashion and creates a mask
		to only show a certain part of the glitch at a time. */
		clip: rect(44px, 450px, 56px, 0);
		/* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
		with an alternating animation to keep things fresh. */
		animation: glitch-anim 5s infinite linear alternate-reverse;
	}

	// Creates a copy after our text. Note comments from ::before.
	&::after {
		@include glitchCopy;
		left: -2px;
		text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
		animation: glitch-anim2 1s infinite linear alternate-reverse;
	}
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
	$steps: 20;
	@for $i from 0 through $steps {
		#{percentage($i*(1/$steps))} {
			clip: rect(random(100) + px, 9999px, random(100) + px, 0);
			transform: skew((random(100) / 100) + deg);
		}
	}
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
	$steps: 20;
	@for $i from 0 through $steps {
		#{percentage($i*(1/$steps))} {
			clip: rect(random(100) + px, 9999px, random(100) + px, 0);
			transform: skew((random(100) / 100) + deg);
		}
	}
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
	$steps: 10;
	@for $i from 0 through $steps {
		#{percentage($i*(1/$steps))} {
			transform: skew((random(10) - 5) + deg);
		}
	}
}



// for codesclever designing 


#wrapperme {
	text-align: center;
	color: #000;
	font-weight: bold;
	font-size: 3.5em;
	padding: 20px 0;

	@media screen and (max-width:800px) {
		font-size: 2rem;
	}
  }
  
  .mycontainer1  span { 
	text-shadow: -0.06em 0 red,  0.06em 0 cyan; /* This creates the 3D effect, pretty easy, eh? */
	letter-spacing: 0.08em; /* make sure the letters don't overlap */
  }
  
  p {
	margin: 0;
  }
  
  /* ---------------- Stars ---------------- */
  
  #stars span {
	display: inline-block;
	transform: scale(1);
	transition: transform 2s cubic-bezier(0, 1, 0, 1);
  }
  #stars span:hover {
	cursor: crosshair;
	transform: scale(1.3); /* This adds a hover effect */
	transition: transform .2s cubic-bezier(0, 0.75, 0, 1);
  }
  #stars span:active {
	text-shadow: none; /* Click to disable the 3D effect */
  }
  
  /* Below the stars animation */
  #stars span:nth-child(1), #stars span:nth-child(5) { font-size: 0.3em; animation-delay: 0.2s; }
  #stars span:nth-child(2), #stars span:nth-child(4) { font-size: 0.5em; animation-delay: 0.1s; }
  #stars span:nth-child(3) { font-size: 0.8em; animation-delay: 0s; }
  
  #stars span { animation: stars-animation 3s 50 ease-in-out; }
  
  @-webkit-keyframes stars-animation {
	0% { transform: scale(1); }
	90% { transform: scale(1); }
	95% { transform: scale(1.3); }
	100% { transform: scale(1); }
  }
  
  #stars:hover span {
	animation: none; /* Disables the animation on hover */
  }
  
  
  /* ---------------- Title ---------------- */
  
  #title {
	font-family: Helvetica, Geneva, sans-serif; /* Any font would work, but SansSerif looks better */
  }
  #title:focus {
	outline: none;
  }
  #title span {
	vertical-align: middle;
	line-height: 20px;
	transition: font-size 2s cubic-bezier(0, 1, 0, 1);
  }

  #title span:active {
	font-size: 20px;
	text-shadow: none; /* Click to disable the 3D effect */
  }
  #title span::selection {
	background-color: red; /* This hides the selection */
  }
  
  
  /* ---------------- Slogan ---------------- */
  
  #slogan { font-size: 0.25em; }
  #slogan span:active { text-shadow: none; }
  
  
  
  
  /* Below just some styling for the meta info */
  
  #meta {
	color: #777;
	font-size: 20px;
	line-height: 1.6em;
	text-align: center;
	text-shadow: rgba(255,255,255,0.5) 0 1px 0;
	margin: 30px;
  }
  #meta strong { font-weight: bold; color: #000; }
  #meta p:first-child { margin-bottom: 20px; }
  #meta a { text-decoration: none; color: #7276ff; }
  #meta a:hover { color: rgba(114,118,255,0.5); }
  #meta img { vertical-align: text-bottom; }